apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
  labels:
    app: istio-egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
    app.kubernetes.io/component: gateways
    app.kubernetes.io/instance: {{ openshift.io_control_panel }}
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: gateways
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.0.2-7.el8-1
    chart: gateways
    heritage: Tiller
    istio: egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
    maistra.io/owner: {{ openshift.io_control_panel }}
    release: istio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
      istio: egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
  template:
    metadata:
      labels:
        app: istio-egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
        chart: gateways
        heritage: Tiller
        istio: egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
        maistra-control-plane: {{ openshift.io_control_panel }}
        release: istio
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.default
          defaultMode: 400
          optional: true
      - name: egressgateway-certs
        secret:
          secretName: istio-egressgateway-certs
          defaultMode: 400
          optional: true
      - name: egressgateway-ca-certs
        secret:
          secretName: istio-egressgateway-ca-certs
          defaultMode: 400
          optional: true
      - name: ott-uds-socket
        emptyDir:
          medium: Memory
# Начало. OTT-sidecar удалить если ОТТ на egress не нужен
      - name: ott-secrets-for-mmt-hly0f
        secret:
          secretName: ott-secrets-for-mmt
          defaultMode: 400
      - name: ott-logback-2xha7
        configMap:
          name: egress-ott-logback
          defaultMode: 400
# Конец. OTT-sidecar удалить если ОТТ на egress не нужен
      containers:
# Начало. OTT-sidecar удалить если ОТТ на egress не нужен
      - resources:
          limits:
            cpu: 400m
            memory: 500Mi
          requests:
            cpu: 300m
            memory: 300Mi
        terminationMessagePath: /dev/termination-log
        name: ott-sidecar
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /mnt/secrets
          name: ott-secrets-for-mmt-hly0f
          readOnly: true
        - mountPath: /mnt/ott-uds-socket
          name: ott-uds-socket
        - mountPath: /tmp/ott-logback.xml
          name: ott-logback-2xha7
          readOnly: true
        terminationMessagePolicy: File
        envFrom:
        - secretRef:
            name: ott-passwords
        - configMapRef:
            name: egress-ott-settings
        image: registry.ca.sbrf.ru/sigma/pprb/ci00641491/ci01125613_ott/ott-client-api-v2:4.0.4
# Конец. OTT-sidecar удалить если ОТТ на egress не нужен
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --log_output_level
        - error
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-egressgateway-{{ openshift.env }}-{{ os_project.fpi_name }}
        - --zipkinAddress
        - zipkin.{{ openshift.io_control_panel }}:9411
        - --proxyAdminPort
        - '15000'
        - --statusPort
        - '15020'
        - --controlPlaneAuthPolicy
        - NONE
        - --discoveryAddress
        - istio-pilot.{{ openshift.io_control_panel }}:15010
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8:1.1.0
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
#        - containerPort: 8080
#          name: http2
#          protocol: TCP
#        - containerPort: 8081
#          name: http-8081
#          protocol: TCP
#        - containerPort: 8443
#          name: https
#          protocol: TCP
          # Порт для траффика с ОТТ
        - containerPort: {{ os_project.istio.egress.ott.port }}
          name: https-{{ os_project.istio.egress.ott.port }}
          protocol: TCP
#        - containerPort: 80
#          protocol: TCP
        - containerPort: 15443
          name: tls
          protocol: TCP
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 400m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/egressgateway-certs
          name: egressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/egressgateway-ca-certs
          name: egressgateway-ca-certs
          readOnly: true
        - mountPath: /mnt/ott-uds-socket
          name: ott-uds-socket
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 1200
